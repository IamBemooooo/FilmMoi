@page "/"
@using Client.Data.IServices.IReadOnlyService
@using Client.DataTransferObj.Films
@using Client.ValueObj.Pagination

@layout MainLayout
@inject IReadOnlyWPService<FilmDto,FilmsWithPaginationRequest> _Ser
@inject NavigationManager naviga


<PageTitle>FilmMoi - BoTheViDai</PageTitle>

@* <div style="background-image:url(./images/hero-bg.jpg); width:100%;height:804px">
    <div class="container pt-5">
        <MudCard Style="width:25%">
            <MudCardContent> style="min-width:205px"
                <MudText>Story of the day</MudText>
                <MudText Typo="Typo.body2">The quick, brown fox jumps over a lazy dog.</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudButton Variant="Variant.Text" Color="Color.Primary">Learn More</MudButton>
            </MudCardActions>
        </MudCard>
    </div>
</div>  *@
<div class="container-fluid d-flex justify-content-center align-items-center" style="background-image:url(./images/hero-bg.jpg);min-height:802px">
    <div class="container pt-5">
        @if(Film.Data!= null)
        {
            foreach(var i in Film.Data)
            {
                <MudElement style="margin-top:150px">
                    <h3 class="fw-bold" style="color:hsl(57, 97%, 45%)">FilmMoi</h3>
                    <p class="mt-4 text-light fw-bold" style="font-size:75px;width:70%">@i.Name</p>
                </MudElement>
                <MudElement class="container d-flex m-0 p-0 mt-4 justify-content-start">
                    <MudElement class="container m-0 p-0 d-flex justify-content-start" style="width:220px">
                        <div class="container m-0 p-0 d-flex text-light fs-5"><MudIconButton Icon="@Icons.Material.Filled.Today" Class="text-light fs-5 m-0 p-0"></MudIconButton>@i.Year</div>
                        <div class="container m-0 p-0 d-flex text-light fs-5"> <MudIconButton Icon="@Icons.Material.Filled.WatchLater" Class="text-light fs-5 p-0 m-0"></MudIconButton>@i.AvgDuration</div>
                    </MudElement>
                    <MudElement class="container ms-5 d-flex m-0 p-0 text-light fs-5">
                        Roman, Drama
                    </MudElement>
                </MudElement>
                <MudButton OnClick="()=>Watch(i.ID)" Variant="Variant.Outlined" Class="fs-6 fw-bold text-light border-3 rounded-pill mt-4" Style="border-color:hsl(57, 97%, 45%);min-width:16%;height:50px;"><MudIcon Icon="@Icons.Material.Filled.PlayArrow" Class="me-2"></MudIcon> WATCH NOW</MudButton>
            }
        }
        else
        {
            <MudElement style="margin-top:150px">
                <h3 class="fw-bold" style="color:hsl(57, 97%, 45%)">FilmMoi</h3>
                <p class="mt-4 text-light fw-bold" style="font-size:75px;width:70%">Unlimited Movie, TVs Shows, & More.</p>
            </MudElement>
            <MudElement class="container d-flex m-0 p-0 mt-4 justify-content-start">
                <MudElement class="container m-0 p-0 d-flex justify-content-start" style="width:220px">
                </MudElement>
                <MudElement class="container ms-5 d-flex m-0 p-0 text-light fs-5">
                    
                </MudElement>
            </MudElement>
            <MudButton Variant="Variant.Outlined" Class="fs-6 fw-bold text-light border-3 rounded-pill mt-4" Style="border-color:hsl(57, 97%, 45%);min-width:16%;height:50px;">Enjoy Your Time!</MudButton>
        }
    </div>
</div>


<div class="container-fluid justify-content-center" style="background-image:url(./images/upcoming-bg.png);min-height:860px">
    <MudElement class="container" style="padding-top:100px">
        <MudElement class="container d-flex justify-content-center">
            <div class="fs-6 m-0 p-0" style="color:hsl(57, 97%, 45%);">ONLINE STREAMING</div>
        </MudElement>
        <MudElement class="container d-flex justify-content-center" style="margin-bottom:30px">
            <MudElement class="container-fluid d-flex justify-content-center d-flex m-0 p-0">
                <div style="font-size:40px;" class="m-0 p-0 mt-4 text-light fw-bold">
                    UPCOMING MOVIES
                </div>
            </MudElement>
        </MudElement>
    </MudElement>
    <MudElement class="container d-flex justify-content-between flex-wrap pt-5 mt-5">

        @if (rsUC.Data != null)
        {
            @foreach (var i in rsUC.Data)
            {
                string img = i.Image;
                <MudButton OnClick="()=>Detail(i.ID)">
                    <MudCard onclick="" Style="min-width:24%;max-width:100%;margin-top:30px;background-color: rgba(0, 0, 0, 0)" Class="btn" data-mdb-ripple-color="light">
                        <img Height="400" src="./images/@img" />
                        <MudCardContent Class="container-fluid d-flex justify-content-between text-light ps-0 pe-0">
                            <MudText Class="ms-0 me-0">@i.Name</MudText>
                            <MudText Class="ms-0 me-0" Typo="Typo.body2">@i.Year</MudText>
                        </MudCardContent>
                        <MudCardContent Class="container-fluid d-flex justify-content-between text-light ps-0 pe-0">
                            <MudRating Class="ms-0 me-0" ReadOnly="true" SelectedValue="@i.AvgRating.GetValueOrDefault()" />
                            <MudText Class="ms-0 me-0" Typo="Typo.body2">
                                @if (i.AvgDuration != TimeSpan.Zero)
                                {
                                    @i.AvgDuration
                                }
                                else
                                {

                                }
                            </MudText>
                        </MudCardContent>
                    </MudCard>
                </MudButton>
            }
        }
        else
        {
            <MudProgressCircular Color="Color.Default" Indeterminate="true" />
        }

    </MudElement>
</div> 

<div class="container-fluid justify-content-center" style="background-image:url(./images/top-rated-bg.jpg);min-height:870px">
    <div class="container" style="padding-top:100px">
        <MudElement class="container-fluid fs-6 m-0 p-0" style="color:hsl(57, 97%, 45%);">ONLINE STREAMING</MudElement>
        <MudElement class="container-fluid d-flex m-0 p-0">
            <MudElement style="font-size:40px;" class="container m-0 p-0 mt-4 text-light fw-bold">
                Top Rated Movies
            </MudElement>
            <MudElement style="" class="container d-flex m-0 p-0 flex-wrap justify-content-end align-items-center">
                <MudButton Variant="Variant.Outlined" Style="border-color:hsl(57, 97%, 45%);height:50px;" Class="fs-5 ms-2 border-2 rounded-pill text-light">Movies</MudButton>
                <MudButton Variant="Variant.Outlined" Style="border-color:hsl(57, 97%, 45%);height:50px;min-width:150px" Class="fs-5 ms-2 border-2 rounded-pill text-light">TV Shows</MudButton>
                <MudButton Variant="Variant.Outlined" Style="border-color:hsl(57, 97%, 45%);height:50px;" Class="fs-5 ms-2 border-2 rounded-pill text-light">Anime</MudButton>
            </MudElement>
        </MudElement>
    </div>
    <div class="container d-flex justify-content-between flex-wrap" style="margin-top:50px">

        <MudElement class="container d-flex justify-content-between flex-wrap pt-5 mt-5">

            @if (rsTR.Data != null)
            {
                @foreach (var i in rsTR.Data)
                {
                    string img = i.Image;

                    <MudButton OnClick="()=>Detail(i.ID)">
                        <MudCard onclick="" Style="min-width:24%;max-width:100%;margin-top:30px;background-color: rgba(0, 0, 0, 0)" Class="btn" data-mdb-ripple-color="light">
                            <img Height="400" src="./images/@img" />
                            <MudCardContent Class="container-fluid d-flex justify-content-between text-light ps-0 pe-0">
                                <MudText Class="ms-0 me-0">@i.Name</MudText>
                                <MudText Class="ms-0 me-0" Typo="Typo.body2">@i.Year</MudText>
                            </MudCardContent>
                            <MudCardContent Class="container-fluid d-flex justify-content-between text-light ps-0 pe-0">
                                <MudRating Class="ms-0 me-0" ReadOnly="true" SelectedValue="@i.AvgRating.GetValueOrDefault()" />
                                <MudText Class="ms-0 me-0" Typo="Typo.body2">
                                    @if (i.AvgDuration != TimeSpan.Zero)
                                    {
                                        @i.AvgDuration
                                    }
                                    else
                                    {

                                    }
                                </MudText>
                            </MudCardContent>
                        </MudCard>
                    </MudButton>
                }
            }
            else
            {
                <MudProgressCircular Color="Color.Default" Indeterminate="true" />
            }

        </MudElement>

    </div>
</div>

<div class="container-fluid justify-content-center" style="background-image:url(./images/top-rated-bg.jpg);min-height:870px;padding-bottom:100px">
    <div class="container" style="padding-top:100px">
        <MudElement class="container d-flex justify-content-center">
            <div class="fs-6 m-0 p-0" style="color:hsl(57, 97%, 45%);">ONLINE STREAMING</div>
        </MudElement>
        <MudElement class="container d-flex justify-content-center" style="margin-bottom:30px">
            <div class="container-fluid d-flex justify-content-center d-flex m-0 p-0">
                <div style="font-size:40px;" class="m-0 p-0 mt-4 text-light fw-bold">
                    World Best TV Series
                </div>
            </div>
        </MudElement>
    </div>
    <div class="container d-flex justify-content-between flex-wrap" style="margin-top:50px">

        <MudElement class="container d-flex justify-content-between flex-wrap pt-5 mt-5">

            @if (rsSR.Data != null)
            {
                @foreach (var i in rsSR.Data)
                {
                    string img = i.Image;
                    <MudButton OnClick="()=>Detail(i.ID)">
                        <MudCard Style="min-width:24%;max-width:100%;margin-top:30px;background-color: rgba(0, 0, 0, 0)" Class="btn" data-mdb-ripple-color="light">
                            <img Height="400" src="./images/@img" />
                            <MudCardContent Class="container-fluid d-flex justify-content-between text-light ps-0 pe-0">
                                <MudText Class="ms-0 me-0">@i.Name</MudText>
                                <MudText Class="ms-0 me-0" Typo="Typo.body2">@i.Year</MudText>
                            </MudCardContent>
                            <MudCardContent Class="container-fluid d-flex justify-content-between text-light ps-0 pe-0">
                                <MudRating Class="ms-0 me-0" ReadOnly="true" SelectedValue="@i.AvgRating.GetValueOrDefault()" />
                                <MudText Class="ms-0 me-0" Typo="Typo.body2">
                                    @if (i.AvgDuration != TimeSpan.Zero)
                                    {
                                        @i.AvgDuration
                                    }
                                    else
                                    {

                                    }
                                </MudText>
                            </MudCardContent>
                        </MudCard>
                    </MudButton>
                }
            }
            else
            {
                <MudProgressCircular Color="Color.Default" Indeterminate="true" />
            }

        </MudElement>

    </div>
</div>

@code{
    FilmsWithPaginationRequest requestUC = new FilmsWithPaginationRequest();
    FilmsWithPaginationRequest requestTR = new FilmsWithPaginationRequest();
    FilmsWithPaginationRequest requestSR = new FilmsWithPaginationRequest();
    FilmsWithPaginationRequest requestFilm = new FilmsWithPaginationRequest();
    PaginationResponse<FilmDto> rsUC = new PaginationResponse<FilmDto>();
    PaginationResponse<FilmDto> rsTR = new PaginationResponse<FilmDto>();
    PaginationResponse<FilmDto> rsSR = new PaginationResponse<FilmDto>();
    PaginationResponse<FilmDto> Film = new PaginationResponse<FilmDto>();


    protected override async Task OnInitializedAsync()
    {
        await LoadUC();
        await LoadTR();
        await LoadSR();
    }

    public async Task LoadUC()
    {
        requestUC.Status = 0;
        requestUC.PageSize = 4;
        rsUC = await _Ser.GetAll(requestUC);
    } 

    public async Task LoadTR()
    {
        requestTR.Rating = 5;
        requestTR.PageSize = 4;
        rsTR = await _Ser.GetAll(requestTR);
    }

    public async Task LoadSR()
    {
        // requestSR.Rating = 5;
        requestSR.Genre = Guid.Parse("1A860E75-0C55-485D-616C-08DC9E33318A");
        requestSR.PageSize = 4;
        rsSR = await _Ser.GetAll(requestSR);
    } 

    public async Task Load()
    {
        requestFilm.Rating = 5;
        requestFilm.PageSize = 1;
        Film = await _Ser.GetAll(requestFilm);
    }

    public async Task Watch(Guid id)
    {
        naviga.NavigateTo($"/WatchingFilm/{id}");
    }

    public async Task Detail(Guid id)
    {
        naviga.NavigateTo($"/FilmDetail/{id}");
    }
}